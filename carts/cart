from ProductObject.models import ProductObject


class Cart:
    def __init__(self, request):
        self.session = request.session
        cart = self.session.get('cart')
        if not cart:
            self.session['cart'] = {}
        cart = self.session['cart']
        self.cart = cart

    def add(self, product):
        product_id = str(product.id)
        inventory = product.sale_ratio
        if product_id not in self.cart:
            new_price = product.sale_ratio()
            self.cart[product_id] = {'quantity': 1, 'new_price': new_price, 'weight': product.pk}
        else:
            if inventory >= 0:
                self.cart[product_id]['quantity'] += 1
        self.save()

    def decrease(self, product):
        product_id = str(product.id)
        if self.cart[product_id]['quantity'] > 0:
            self.cart[product_id]['quantity'] -= 1
            self.save()

    def remove(self, product):
        product_id = str(product.id)
        if product_id in self.cart:
            del self.cart[product_id]

    def clear(self, product):
        if self.cart:
            del self.cart
        self.save()

    def get_total_price(self):
        pass

    def price(self):
        price = sum(item['new_price'] * item['quantity'] for item in self.cart.values())
        return price

    def final_price(self):
        pass

    def save(self):
        self.session.modified = True


